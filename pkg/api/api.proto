syntax = "proto3";

package dcrticketmatcher;

service SplitTicketMatcherService {
    rpc WatchWaitingList (WatchWaitingListRequest) returns (stream WatchWaitingListResponse);
    rpc FindMatches (FindMatchesRequest) returns (FindMatchesResponse);
    rpc GenerateTicket (GenerateTicketRequest) returns (GenerateTicketResponse);
    rpc FundTicket (FundTicketRequest) returns (FundTicketResponse);
    rpc FundSplitTx (FundSplitTxRequest) returns (FundSplitTxResponse);
    rpc Status (StatusRequest) returns (StatusResponse);
}

message TxOut {
    uint64 value = 1;
    bytes script = 2;
}

message TxIn {
    bytes prev_hash = 1;
    int32 prev_index = 2;
    bytes script_sig = 3;
}

message OutPoint {
    bytes prev_hash = 1;
    int32 prev_index = 2;
    int32 tree = 3;
}

message WatchWaitingListRequest {}
message WatchWaitingListResponse {
    repeated uint64 amounts = 1;
}

message FindMatchesRequest {
    uint64 amount = 1;
}

message FindMatchesResponse {
    int32 session_id = 1;
    uint64 amount = 2;
    uint64 fee = 3;
    uint64 pool_fee = 4;
    bytes mainchain_hash = 5;
    uint64 ticket_price = 6;
}

message GenerateTicketRequest {
    int32 session_id = 1;
    TxOut commitment_output = 2;
    TxOut change_output = 3;
    TxOut split_tx_output = 4;
    TxOut split_tx_change = 5;
    repeated OutPoint split_tx_inputs = 6;
    string vote_address = 7;
    string pool_address = 8;
    bytes secretnb_hash = 9;
}

message GenerateTicketResponse {
    message Participant {
        uint64 amount = 1;
        bytes secretnb_hash = 2;
        bytes vote_pk_script = 3;
        bytes pool_pk_script = 4;
    }
    bytes split_tx = 1;
    bytes ticket_template = 2;
    bytes revocation_template = 3;
    repeated Participant participants = 4;
}

message FundTicketRequest {
    message FundedParticipantTicket {
        bytes ticket_input_scriptsig = 1;
    }
    int32 session_id = 1;
    repeated FundedParticipantTicket tickets = 2;
    bytes revocation_script_sig = 3;
}

message FundTicketResponse {
    message FundedParticipantTicket {
        bytes ticket = 1;
        bytes revocation_script_sig = 2;
    }
    repeated FundedParticipantTicket tickets = 1;
}

message FundSplitTxRequest {
    int32 session_id = 1;
    repeated bytes split_tx_scriptsigs = 2;
    uint64 secretnb = 3;
}

message FundSplitTxResponse {
    message ParticipantSecret {
        uint64 secretnb = 4;
    }
    bytes split_tx = 1;
    bytes selected_ticket = 2;
    bytes revocation = 3;
    repeated ParticipantSecret secrets = 4;
}

message StatusRequest { }
message StatusResponse {
    uint64 ticket_price = 1;
}
